version: "3.8"

services:
  # Backend Go service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-radio-backend
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - PORT=8080
      - SQLITE_DB_PATH=/app/data/radio.db
      - LOG_LEVEL=info
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
    volumes:
      - go_radio_data:/app/data
    networks:
      - go-radio-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/v1/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: go-radio-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - go-radio-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: go-radio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - go-radio-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  go_radio_data:
    driver: local

networks:
  go-radio-network:
    driver: bridge
